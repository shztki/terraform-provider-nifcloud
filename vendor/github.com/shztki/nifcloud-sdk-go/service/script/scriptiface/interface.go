// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package scriptiface provides an interface to enable mocking the NIFCLOUD Script service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package scriptiface

import (
	"github.com/shztki/nifcloud-sdk-go/nifcloud"
	"github.com/shztki/nifcloud-sdk-go/nifcloud/request"
	"github.com/shztki/nifcloud-sdk-go/service/script"
)

// ScriptAPI provides an interface to enable mocking the
// script.Script service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // NIFCLOUD Script.
//    func myFunc(svc scriptiface.ScriptAPI) bool {
//        // Make svc.ExecuteScript request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := script.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockScriptClient struct {
//        scriptiface.ScriptAPI
//    }
//    func (m *mockScriptClient) ExecuteScript(input *script.ExecuteScriptInput) (*script.ExecuteScriptOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockScriptClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ScriptAPI interface {
	ExecuteScript(*script.ExecuteScriptInput) (*script.ExecuteScriptOutput, error)
	ExecuteScriptWithContext(nifcloud.Context, *script.ExecuteScriptInput, ...request.Option) (*script.ExecuteScriptOutput, error)
	ExecuteScriptRequest(*script.ExecuteScriptInput) (*request.Request, *script.ExecuteScriptOutput)
}

var _ ScriptAPI = (*script.Script)(nil)
